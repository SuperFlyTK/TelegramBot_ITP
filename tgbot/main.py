import os
import telebot
import threading
from datetime import datetime
import requests
import random
from dotenv import load_dotenv  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω
if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.")

bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤
deadlines = {}

# –°–ø–∏—Å–æ–∫ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–∏—Ç–∞—Ç
MOTIVATIONAL_QUOTES = [
    "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è! –í–µ–ª–∏–∫–∏–µ –≤–µ—â–∏ —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏.",
    "–°–µ–≥–æ–¥–Ω—è ‚Äî –ª—É—á—à–∏–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! –¢—ã –º–æ–∂–µ—à—å –≤—Å—ë!",
    "–û—à–∏–±–∫–∏ ‚Äî —ç—Ç–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –ø—Ä–æ–±—É–µ—à—å. –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥!",
    "–í–µ—Ä—å –≤ —Å–µ–±—è! –¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º —Ç–µ–±–µ –∫–∞–∂–µ—Ç—Å—è, –∏ —É–º–Ω–µ–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—å.",
    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤—ã–π —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –ù–µ —É–ø—É—Å—Ç–∏ –µ–≥–æ!",
    "–£—Å–ø–µ—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –Ω–µ –±–æ–∏—Ç—Å—è —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π. –¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏!",
    "–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–æ–ª—å—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º! –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è!",
    "–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–æ–±–æ–π, –≤–µ—Ä—å –≤ —Å–µ–±—è –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è! –£ —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!"
]

@bot.message_handler(commands=['motivate'])
def send_motivation(message):
    quote = random.choice(MOTIVATIONAL_QUOTES)
    bot.send_message(message.chat.id, quote)

# –§–∞–∫—Ç—ã –æ Python
PYTHON_FACTS = [
    "Python –±—ã–ª —Å–æ–∑–¥–∞–Ω –ì–≤–∏–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º–æ–º –∏ –≤—ã–ø—É—â–µ–Ω –≤ 1991 –≥–æ–¥—É.",
    "–ú–∞–∫—Å—É—Ç–æ–≤ –ê–∫—ã–ª–±–µ–∫ - —Å–∞–º—ã–π –ª—É—á—à–∏–π —É—á–∏—Ç–µ–ª—å —è–∑—ã–∫–∞ Python.",
    "–ù–∞–∑–≤–∞–Ω–∏–µ Python –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–µ –æ—Ç –∑–º–µ–∏, –∞ –æ—Ç –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–≥–æ –∫–æ–º–µ–¥–∏–π–Ω–æ–≥–æ —à–æ—É 'Monty Python‚Äôs Flying Circus'.",
    "Python —è–≤–ª—è–µ—Ç—Å—è —è–∑—ã–∫–æ–º —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø–∞–º—è—Ç—å—é.",
    "Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö, –º–∞—à–∏–Ω–Ω–æ–º –æ–±—É—á–µ–Ω–∏–∏, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º.",
    "Python –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–¥–∏–≥–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω–æ–µ, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ.",
    "–í Python –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å list comprehensions –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: `[x**2 for x in range(10)]`.",
    "Python —à–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ –∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∞–∫–∏–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º, –∫–∞–∫ TensorFlow, NumPy –∏ Pandas.",
    "–°–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Python –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è CPython –∏ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ω–∞ C.",
    "–ú–∞–∫—Å—É—Ç–æ–≤ –ê–∫—ã–ª–±–µ–∫ - —Å–∞–º—ã–π –ª—É—á—à–∏–π —É—á–∏—Ç–µ–ª—å —è–∑—ã–∫–∞ Python."
]

@bot.message_handler(commands=['fact'])
def send_fact(message):
    fact = random.choice(PYTHON_FACTS)
    bot.send_message(message.chat.id, fact)

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–∞
@bot.message_handler(commands=['deadline'])
def set_deadline(message):
    try:
        _, title, deadline_time = message.text.split(maxsplit=2)
        deadline_dt = datetime.strptime(deadline_time, "%Y-%m-%d %H:%M")

        deadline_dt = deadline_dt.replace(second=0, microsecond=0)
        now = datetime.now().replace(second=0, microsecond=0)

        if deadline_dt <= now:
            bot.send_message(message.chat.id, "–î–µ–¥–ª–∞–π–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º!")
            return

        if message.chat.id not in deadlines:
            deadlines[message.chat.id] = {}

        deadlines[message.chat.id][title] = deadline_dt
        bot.send_message(message.chat.id, f"–î–µ–¥–ª–∞–π–Ω '{title}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {deadline_dt.strftime('%Y-%m-%d %H:%M')}")

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
        time_until_deadline = (deadline_dt - now).total_seconds()
        reminder_time = max(time_until_deadline - 3600, 0)  # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 1 —á–∞—Å, –Ω–æ –Ω–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ

        # –ï—Å–ª–∏ –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ –±–æ–ª—å—à–µ —á–∞—Å–∞, —Å—Ç–∞–≤–∏–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 1 —á–∞—Å
        if reminder_time > 0:
            threading.Timer(reminder_time, notify_deadline, [message.chat.id, title, False]).start()
        else:
            # –ï—Å–ª–∏ –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ –º–µ–Ω—å—à–µ —á–∞—Å–∞, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—Ä–∞–∑—É
            bot.send_message(message.chat.id, f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —á–µ—Ä–µ–∑ –º–µ–Ω–µ–µ —á–µ–º 1 —á–∞—Å –¥–µ–¥–ª–∞–π–Ω '{title}'!")

        # –û—Å–Ω–æ–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–º–µ–Ω—Ç –¥–µ–¥–ª–∞–π–Ω–∞
        threading.Timer(time_until_deadline, notify_deadline, [message.chat.id, title, True]).start()

    except ValueError:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: `/deadline –ù–∞–∑–≤–∞–Ω–∏–µ YYYY-MM-DD HH:MM`")

# –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–µ
def notify_deadline(chat_id, title, is_final):
    if is_final:
        bot.send_message(chat_id, f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –î–µ–¥–ª–∞–π–Ω '{title}' –Ω–∞—Å—Ç—É–ø–∏–ª!")
    else:
        bot.send_message(chat_id, f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –î–æ –¥–µ–¥–ª–∞–π–Ω–∞ '{title}' –æ—Å—Ç–∞–ª—Å—è 1 —á–∞—Å!")
# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–µ–¥–ª–∞–π–Ω–æ–≤
@bot.message_handler(commands=['deadlines'])
def list_deadlines(message):
    chat_id = message.chat.id
    if chat_id in deadlines and deadlines[chat_id]:
        deadline_list = "\n".join([f"{title}: {dt.strftime('%Y-%m-%d %H:%M')}" for title, dt in deadlines[chat_id].items()])
        bot.send_message(chat_id, f"–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–¥–ª–∞–π–Ω—ã:\n{deadline_list}")
    else:
        bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤!")

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–∞
@bot.message_handler(commands=['remove_deadline'])
def remove_deadline(message):
    try:
        _, title = message.text.split(maxsplit=1)
        chat_id = message.chat.id

        if chat_id in deadlines and title in deadlines[chat_id]:
            del deadlines[chat_id][title]
            bot.send_message(chat_id, f"–î–µ–¥–ª–∞–π–Ω '{title}' —É–¥–∞–ª–µ–Ω!")
        else:
            bot.send_message(chat_id, f"–î–µ–¥–ª–∞–π–Ω '{title}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except ValueError:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /remove_deadline –ù–∞–∑–≤–∞–Ω–∏–µ")

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(commands=['translate'])
def translate_text(message):
    parts = message.text.split(maxsplit=2)
    if len(parts) < 3:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —è–∑—ã–∫ (en –∏–ª–∏ ru) –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.")
        return

    lang, text = parts[1], parts[2]
    if lang not in ['en', 'ru']:
        bot.send_message(message.chat.id,
                         "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏: 'en' (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π) –∏ 'ru' (—Ä—É—Å—Å–∫–∏–π). –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /translate en –¢–µ–∫—Å—Ç")
        return

    lang_pair = 'ru|en' if lang == 'en' else 'en|ru'
    url = f"https://api.mymemory.translated.net/get?q={text}&langpair={lang_pair}"
    response = requests.get(url).json()
    translated_text = response['responseData']['translatedText']

    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–≤–æ–¥ ({lang}): {translated_text}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "üìå –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/translate —Ç–µ–∫—Å—Ç - –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n"
        "/fact - —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ Python –∏ –æ–± –æ–¥–Ω–æ–º —á–µ–ª–æ–≤–µ–∫–µ\n"
        "/motivate - –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã\n\n"
        "üïí –†–∞–±–æ—Ç–∞ —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏:\n"
        "/deadline –ù–∞–∑–≤–∞–Ω–∏–µ YYYY-MM-DD HH:MM - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω\n"
        "/deadlines - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤\n"
        "/remove_deadline –ù–∞–∑–≤–∞–Ω–∏–µ - —É–¥–∞–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω"
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)